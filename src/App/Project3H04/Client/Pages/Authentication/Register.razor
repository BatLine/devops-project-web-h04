@page "/authentication/register"
@inject NavigationManager NavigationManager

<h1>Register</h1>

<div class="card-body">
    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>First Name</label>
            <InputText @bind-Value="model.FirstName" class="form-control" />
            <ValidationMessage For="@(() => model.FirstName)" />
        </div>
        <div class="form-group">
            <label>Last Name</label>
            <InputText @bind-Value="model.LastName" class="form-control" />
            <ValidationMessage For="@(() => model.LastName)" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="model.Email" class="form-control" />
            <ValidationMessage For="@(() => model.Email)" />
        </div>
        <div class="form-group">
            <label>Birthdate</label>
            <InputDate @bind-Value="model.BirthDate" class="form-control" />
            <ValidationMessage For="@(() => model.BirthDate)" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <InputText @bind-Value="model.Password" type="password" class="form-control" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
        <div class="form-group">
            <label>Repeat Password</label>
            <InputText @bind-Value="model.RepeatPassword" type="password" class="form-control" />
            <ValidationMessage For="@(() => model.RepeatPassword)" />
        </div>
        <button disabled="@loading" class="btn btn-primary">
            @if (loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Register
        </button>
        <NavLink href="/login" class="btn btn-link">Cancel</NavLink>
    </EditForm>
</div>


@code {
    private bool loading;
    private RegisterDTO model = new RegisterDTO();

    async void HandleValidSubmit()
    {
        NavigationManager.NavigateTo("/");
    }

    private class RegisterDTO
    {
        public string FirstName { get; set; }

        public string LastName { get; set; }

        public string Email { get; set; }

        public DateTime BirthDate { get; set; }

        public string Password { get; set; }

        public string RepeatPassword { get; set; }

    }
}

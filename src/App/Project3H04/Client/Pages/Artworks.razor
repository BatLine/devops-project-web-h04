@page "/artworks"
@inject HttpClient httpClient

<body>



    <div class="flex-container">



        <p class="black-style" style="padding-left:25em;justify-content:left;">Artworks</p>


        <div class="box">
            <div class="filter-container">
                <div class="col-lg-12 mb-4">
                    <input type="search" placeholder="search on name..." value="@searchterm" @oninput="SearchArt" />
                </div>
                <ul>
                    <li>
                        <input type="checkbox" checked>
                        <i></i>
                        <h2>Artists</h2>
                    </li>
                    <li>
                        <input type="checkbox" checked>
                        <i></i>
                        <h2>Medium</h2>
                        <div class="checkbox">
                            @if (kunstwerken != null)
                            {
                                @foreach (var medium in artMediums)
                                {
                                    <div class="form-check">

                                        <input class="form-check-input" type="checkbox" value="@medium" name="material-checkbox" id="@medium" @onchange="_ => HandleMediumChange(medium)">
                                        <label class="form-check-label">
                                            @medium
                                        </label>
                                    </div>
                                }
                            }

                            <!-- <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="hout" name="material-checkbox" id="Hout" @onchange="HandleMediumChange">
                                <label class="form-check-label" for="flexCheckDefault">
                                    Hout
                                </label>
                            </div>
                            -->
                        </div>
                    </li>
                    <li>
                        <input type="checkbox" checked>
                        <i></i>
                        <h2>Ways to buy</h2>
                        <div class="checkbox">

                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="bid" name="pay-checkbox" id="flexCheckDefault">
                                <label class="form-check-label" for="flexCheckDefault">
                                    Bid
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="buy" name="pay-checkbox" id="flexCheckDefault">
                                <label class="form-check-label" for="flexCheckDefault">
                                    Buy now
                                </label>
                            </div>

                        </div>
                    </li>
                    <li>
                        <input type="checkbox" checked>
                        <i></i>
                        <h2>Price</h2>
                        <div class="checkbox">
                            <input type="range" name="range" min="1" max="10" step="2" />
                        </div>
                    </li>
                    <li>
                        <input type="checkbox" checked>
                        <i></i>
                        <h2>Size</h2>
                        <div class="checkbox">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="size-checkbox" value="small" id="small">
                                <label class="form-check-label" for="small">
                                    Small (under 50cm)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="size-checkbox" value="medium" id="medium">
                                <label class="form-check-label" for="medium">
                                    Medium (50 - 100cm)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="size-checkbox" value="large" id="large">
                                <label class="form-check-label" for="large">
                                    Large (over 100cm)
                                </label>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>

            <div class="column">

                @if (kunstwerken != null)
                {
                    @foreach (var kunst in kunstwerken)
                    {
                        <div class="column">
                            <div class="artwork">
                                <!--hier naar details -->
                                <a href="artworks/@kunst.Id" style="text-decoration:none">
                                    <div>
                                        <img src="/images/@kunst.Fotos.First().Pad" alt="" />
                                        <div class="artwork-text">
                                            <p class="artistname">@kunst.Kunstenaar.Gebruikersnaam</p>
                                            <p class="artwork">@kunst.Naam</p>
                                            <p class="price">€@kunst.Prijs</p>

                                        </div>


                                    </div>

                                </a>
                            </div>
                        </div>



                    }
                }
            </div>

        </div>
    </div>


</body>

@code {
    public IEnumerable<string> artMediums;
    private List<String> selectedItems = new();

    private string searchterm;
    private List<Kunstwerk_DTO.Index> kunstwerken;
    private List<Kunstwerk_DTO.Index> filteredKunstwerken;
    private List<Kunstwerk_DTO.Index> kunstCopy;

    protected override async Task OnInitializedAsync()
    {
        //kunstwerken = await httpClient.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>($"api/Kunstwerk?term={searchterm}");
        kunstwerken = await httpClient.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>("api/Kunstwerk");
        kunstCopy = kunstwerken;
        //vul artMediums met alle mogelijke mediums van kunstwerken
        artMediums = kunstCopy.Select(x => x.Materiaal).Distinct();
    }

    private async Task SearchArt(ChangeEventArgs args)
    {
        searchterm = args.Value.ToString();
        if (string.IsNullOrEmpty(searchterm))
            kunstwerken = await httpClient.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>("api/Kunstwerk");
        else
            kunstwerken = await httpClient.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>($"api/Kunstwerk?term={searchterm}");
    }

    private void HandleMediumChange(string medium)
    {
        if (selectedItems.Contains(medium))
        {
            selectedItems.Remove(medium);
        }
        else
        {
            selectedItems.Add(medium);
        }
        updateSelectedItems("materiaal", selectedItems);
    }

    private void updateSelectedItems(string kindOfItem, List<string> selectedItems)
    {
        filteredKunstwerken = new();

        if (selectedItems.Count != 0)
        {
            if (kindOfItem.Equals("materiaal"))
            {
                foreach (string s in selectedItems)
                {
                    var list = kunstCopy.Where(x => x.Materiaal.Contains(s)).ToList();
                    filteredKunstwerken.AddRange(list);
                }
            }
            if (kindOfItem.Equals("grootte"))
            {
                //eigenschap grootte bestaat nog niet
                //var list = kunstCopy.Where(x => x.Materiaal.Grootte(s)).ToList();
                //filteredKunstwerken.AddRange(list);
            }

            kunstwerken = filteredKunstwerken;
        }
        else kunstwerken = kunstCopy;
    }

}

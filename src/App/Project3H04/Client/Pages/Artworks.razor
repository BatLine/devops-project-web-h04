@page "/artworks"
<!--AUTH-->
@attribute [AllowAnonymous]
<!--=> Deze http PublicClient gebruiken voor Anonymous-->
@inject PublicClient httpClient

<body>
    <div class="container">
        <p class="black-style" style="padding-left:25em;justify-content:left;">Artworks</p>
        <div class="row">
            <div class="filter-container">
                <div class="col-md-12 col-lg-10 col-xl-10">
                    <ul>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Artists</h2>
                            <div class="checkbox">
                                <input @bind="filter.ArtistSearchterm" type="search" style="width:100%" placeholder="Artist Name" />
                            </div>
                        </li>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Artworks</h2>
                            <div class="checkbox">
                                <input @bind="filter.ArtworkSearchterm" type="search" style="width:100%" placeholder="Artwork Name" />
                            </div>
                        </li>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Medium</h2>
                            <div class="checkbox">
                                @if (kunstwerken != null)
                                {
                                    @foreach (var medium in artMediums)
                                    {
                                        <div class="form-check">

                                            <input class="form-check-input" type="checkbox" value="@medium" name="material-checkbox" @onchange="_ => BindCheckboxes(_,filterMedium:medium)">
                                            <label class="form-check-label">
                                                @medium
                                            </label>
                                        </div>
                                    }
                                }
                            </div>
                        </li>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Ways to buy</h2>
                            <div class="checkbox">

                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="bid" name="pay-checkbox" id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                        Bid
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="buy" name="pay-checkbox" id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                        Buy now
                                    </label>
                                </div>

                            </div>
                        </li>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Price</h2>
                            <div class="checkbox">
                                <input @bind="filter.MinimumPrice" type="search" placeholder="low" />  to
                                <input @bind="filter.MaximumPrice" type="search" placeholder="high" />
                            </div>
                        </li>
                        <li>
                            <input type="checkbox" checked>
                            <i></i>
                            <h2>Size</h2>
                            <div class="checkbox">

                                @if (kunstwerken != null)
                                {
                                    @foreach (var size in artSizes)
                                    {
                                        <div class="form-check">

                                            <input class="form-check-input" type="checkbox" name="size-checkbox" @onchange="_ => BindCheckboxes(_,filterSize:size)">
                                            <label class="form-check-label">
                                                @size
                                            </label>
                                        </div>
                                    }
                                }

                            </div>

                        </li>
                    </ul>
                </div>
            </div>
            <div class="col">
                <div class="row">
                    @if (kunstwerken != null)
                    {
                        @foreach (var kunst in kunstwerken)
                        {
                            <div class="col-md-12 col-lg-6">
                                <a href="artworks/@kunst.Id" style="text-decoration:none">

                                    <img src="@kunst.HoofdFoto.Pad" alt="@kunst.HoofdFoto.Pad" style="width:100%" />
                                    <div class="artwork-text">
                                        <p class="artistname">@kunst.Kunstenaar.Gebruikersnaam</p>
                                        <p class="artwork">@kunst.Naam</p>
                                        <p class="price">€@kunst.Prijs</p>

                                    </div>

                                </a>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

</body>

@code {
    public IEnumerable<string> artMediums;
    public IEnumerable<string> artSizes;

    private List<Kunstwerk_DTO.Index> kunstwerken;
    private List<Kunstwerk_DTO.Index> kunstCopy;

    private List<String> selectedMediums = new();
    private List<String> selectedSizes = new();

    private ArtworkFilter filter = new();

    protected override async Task OnInitializedAsync()
    {

        kunstwerken = await httpClient.Client.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>($"api/Kunstwerk");
        kunstCopy = kunstwerken;
        //vul artMediums met alle mogelijke mediums van kunstwerken
        artMediums = kunstCopy.Select(x => x.Materiaal).Distinct();
        //vul artSizes met alle mogelijke groottes van kunstwerken
        artSizes = new List<string> { "Small", "Medium", "Large" };
        //subscribe
        filter.OnArtworkFilterChanged += FilterArtworksAsync;
    }

    public void Dispose()
    { // If we don't do this, we'll have memory leaks.
        filter.OnArtworkFilterChanged -= FilterArtworksAsync;
    }

    private async Task BindCheckboxes(ChangeEventArgs args, string filterMedium = "", string filterSize = "")
    {
        //selectedMediums
        if (filterMedium != "")
        {
            if (!selectedMediums.Contains(filterMedium))
                selectedMediums.Add(filterMedium);
            else selectedMediums.Remove(filterMedium);
        }

        filter.Mediums = selectedMediums;


        //selectedSizes
        if (filterSize != "")
        {
            if (!selectedSizes.Contains(filterSize))
                selectedSizes.Add(filterSize);
            else selectedSizes.Remove(filterSize);
        }

        filter.Sizes = selectedSizes;

    }

    private async void FilterArtworksAsync()
    {
        Kunstwerk_DTO.Filter request = new()
        {
            Naam = filter.ArtworkSearchterm,
            MinimumPrijs = filter.MinimumPrice,
            MaximumPrijs = filter.MaximumPrice,
            Materiaal = filter.Mediums,
            Grootte = filter.Sizes,
            Kunstenaar = filter.ArtistSearchterm

        };
        var queryParameters = request.GetQueryString();
        kunstwerken = await httpClient.Client.GetFromJsonAsync<List<Kunstwerk_DTO.Index>>($"api/Kunstwerk?{queryParameters}");
        StateHasChanged(); // Since it's not a UI-event.
    }

}


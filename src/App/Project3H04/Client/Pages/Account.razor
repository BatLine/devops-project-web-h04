@page "/account"
<!--AUTH-->
@attribute [Authorize]
@inject HttpClient httpClient
<div class="container-fluid m-0 vh-100">
    <div class="row vh-100">
        <div class="col-3 p-0">
            <nav id="sidebar">
                <div class="row justify-content-center">
                    <div class="col-6 p-4">
                        <div class="rounded-circle image">
                            <img src="/images/A1.png" alt="" />
                        </div>
                    </div>
                </div>
                <ul class="list-unstyled mb-5">

                    <li>
                        <a href="#">profile</a>
                    </li>
                    <li>
                        <a href="#">subscription</a>
                    </li>
                    <li>
                        <a href="#">artworks</a>
                    </li>
                </ul>

            </nav>
        </div>
        <div class="col-9 p-3">
            <!-- Page Content  -->
            <!--eerst de algemene attributen als geb tonen en dan bv voor bestellingen of kunstwerken te tonen, de klant of kunstenaar obj gebruiken !!!-->
            <!--algemene dingen tonen met bestellingen en als kunstenaar(AuthorizeView) dan vanonder of een tab om als kunstenaar uw kunstwerken te zien en te editen-->


            <p> Username: @geb.Gebruikersnaam</p>
            <p> Day of birth: @geb.GeboorteDatum</p>
            <p> Email: @geb.Email</p>
            <!--hier de extra-->
        </div>
    </div>

</div>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private Gebruiker_DTO geb = new Gebruiker_DTO();
    private Klant_DTO klant = new Klant_DTO();
    private Kunstenaar_DTO kunst = new Kunstenaar_DTO();

    protected override async Task OnParametersSetAsync()
    {
        //de user ophalen uit auth en kijken welke soort user het is
        //voor algemene attributen de geb gebruiken

        var user = (await authenticationStateTask).User;
        Console.WriteLine(user.Identity.Name);
        Console.WriteLine(user.IsInRole("Kunstenaar")); //wrm IS DIT FALSE?
        if (user.IsInRole("Kunstenaar"))
        {
            kunst = await httpClient.GetFromJsonAsync<Kunstenaar_DTO>($"api/Kunstenaar/byEmail/{user.Identity.Name}");
            geb = kunst;
        }
        else
        {
            //kunst = await httpClient.GetFromJsonAsync<Kunstenaar_DTO>($"api/Kunstenaar/{user.Identity.Name}");
            //geb = kunst;
            klant = await httpClient.GetFromJsonAsync<Klant_DTO>($"api/Klant/byEmail/{user.Identity.Name}");
            geb = klant;
            Console.WriteLine(klant.Email);

            //Console.WriteLine(kunst.Email);
            //Console.WriteLine(geb.Email);

        }
    }
}



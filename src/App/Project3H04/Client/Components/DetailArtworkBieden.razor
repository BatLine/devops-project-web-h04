@inject PublicClient httpClient

@if (Veiling != null) {
    @if (!Veiling.BodenOpVeiling.Any())
    {
        <h4>Er is nog niet geboden.</h4>
    }
    else
    {
        <p style="font-size: 1.5rem; color: dimgray"><span style="font-weight: bold; color: black">Hoogste bod: </span>€@Veiling.HoogsteBod.BodPrijs</p>
        @if (Veiling.BodenOpVeiling.Count() > 1) {
            <p style="font-weight: bold">Vorige boden:</p>
            foreach (var bod in Veiling.BodenOpVeiling.TakeLast(4).SkipLast(1)) {
                <p style="font-size: 1rem; color: dimgray">€@bod.BodPrijs</p>
            }
        }
    }
} else {
    //Still loading?
}

@code {
    [Parameter] public int KunstwerkId { get; set; }
    private Veiling_DTO Veiling { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Veiling = await httpClient.Client.GetFromJsonAsync<Veiling_DTO>($"api/Veiling/GetByKunstwerkId/{KunstwerkId}");
    }
}

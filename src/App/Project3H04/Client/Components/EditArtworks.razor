@inject HttpClient httpClient
@inject ISidepanelService Sidepanel


<div class="row">
    @if (kunstenaar.Kunstwerken.Count != 0)
    {
        @foreach (Kunstwerk_DTO.Index k in kunstenaar.Kunstwerken)
        {

            <div class="col-3">
                <a href="artworks/@k.Id" style="text-decoration:none">
                    <div class="image">
                        <img src="@k.HoofdFoto.Pad" />
                    </div>
                </a>
                <p class="artwork">@k.Naam</p>

                <a class="btn btn-light btn-xl" @onclick="(()=>OpenEditSidepanel(k))" style="border-radius: 25px; padding-left: 30px;padding-right: 30px; border-color: brown;">Edit</a>

            </div>
        }
    }
    else
    {
        <p>No artworks found</p>
    }

</div>

@code {
    [Parameter] public Kunstenaar_DTO kunstenaar { get; set; }

    private Kunstwerk_DTO.Edit _kunstwerk;

    public async Task OpenEditSidepanel(Kunstwerk_DTO.Index k)
    {
        var kunstwerkDetail = await httpClient.GetFromJsonAsync<Kunstwerk_DTO.Detail>($"api/kunstwerk/{k.Id}");
        _kunstwerk = new Kunstwerk_DTO.Edit(kunstwerkDetail);

        var callback = EventCallback.Factory.Create(this, RedirectPage);

        var parameters = new Dictionary<string, object>
{
                //[Parameter] Kunstwerk_DTO.Create
                { nameof(Components.EditArtwork.Model), _kunstwerk},
                { nameof(Components.EditArtwork.OnRedirect),callback  }
        };
        Sidepanel.Open<Components.EditArtwork>("Edit", "artwork", parameters); //lmpao, gg sidepanel

    }
    private async Task RedirectPage()
    {
        //refresh?
        var kunstenaarRefresh = await httpClient.GetFromJsonAsync<Kunstenaar_DTO>($"api/kunstenaar/{kunstenaar.GebruikerId}");
        kunstenaar = kunstenaarRefresh;

        Sidepanel.Close();

    }

}

